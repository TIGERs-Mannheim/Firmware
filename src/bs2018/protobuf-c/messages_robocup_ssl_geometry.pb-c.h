/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages_robocup_ssl_geometry.proto */

#ifndef PROTOBUF_C_messages_5frobocup_5fssl_5fgeometry_2eproto__INCLUDED
#define PROTOBUF_C_messages_5frobocup_5fssl_5fgeometry_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Vector2f Vector2f;
typedef struct _SSLFieldLineSegment SSLFieldLineSegment;
typedef struct _SSLFieldCicularArc SSLFieldCicularArc;
typedef struct _SSLGeometryFieldSize SSLGeometryFieldSize;
typedef struct _SSLGeometryCameraCalibration SSLGeometryCameraCalibration;
typedef struct _SSLGeometryData SSLGeometryData;


/* --- enums --- */


/* --- messages --- */

struct  _Vector2f
{
  ProtobufCMessage base;
  float x;
  float y;
};
#define VECTOR2F__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector2f__descriptor) \
    , 0, 0 }


struct  _SSLFieldLineSegment
{
  ProtobufCMessage base;
  char *name;
  Vector2f *p1;
  Vector2f *p2;
  float thickness;
};
#define SSL__FIELD_LINE_SEGMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__field_line_segment__descriptor) \
    , NULL, NULL, NULL, 0 }


struct  _SSLFieldCicularArc
{
  ProtobufCMessage base;
  char *name;
  Vector2f *center;
  float radius;
  float a1;
  float a2;
  float thickness;
};
#define SSL__FIELD_CICULAR_ARC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__field_cicular_arc__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _SSLGeometryFieldSize
{
  ProtobufCMessage base;
  int32_t field_length;
  int32_t field_width;
  int32_t goal_width;
  int32_t goal_depth;
  int32_t boundary_width;
  size_t n_field_lines;
  SSLFieldLineSegment **field_lines;
  size_t n_field_arcs;
  SSLFieldCicularArc **field_arcs;
};
#define SSL__GEOMETRY_FIELD_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__geometry_field_size__descriptor) \
    , 0, 0, 0, 0, 0, 0,NULL, 0,NULL }


struct  _SSLGeometryCameraCalibration
{
  ProtobufCMessage base;
  uint32_t camera_id;
  float focal_length;
  float principal_point_x;
  float principal_point_y;
  float distortion;
  float q0;
  float q1;
  float q2;
  float q3;
  float tx;
  float ty;
  float tz;
  protobuf_c_boolean has_derived_camera_world_tx;
  float derived_camera_world_tx;
  protobuf_c_boolean has_derived_camera_world_ty;
  float derived_camera_world_ty;
  protobuf_c_boolean has_derived_camera_world_tz;
  float derived_camera_world_tz;
};
#define SSL__GEOMETRY_CAMERA_CALIBRATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__geometry_camera_calibration__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0,0, 0,0 }


struct  _SSLGeometryData
{
  ProtobufCMessage base;
  SSLGeometryFieldSize *field;
  size_t n_calib;
  SSLGeometryCameraCalibration **calib;
};
#define SSL__GEOMETRY_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__geometry_data__descriptor) \
    , NULL, 0,NULL }


/* Vector2f methods */
void   vector2f__init
                     (Vector2f         *message);
size_t vector2f__get_packed_size
                     (const Vector2f   *message);
size_t vector2f__pack
                     (const Vector2f   *message,
                      uint8_t             *out);
size_t vector2f__pack_to_buffer
                     (const Vector2f   *message,
                      ProtobufCBuffer     *buffer);
Vector2f *
       vector2f__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vector2f__free_unpacked
                     (Vector2f *message,
                      ProtobufCAllocator *allocator);
/* SSLFieldLineSegment methods */
void   ssl__field_line_segment__init
                     (SSLFieldLineSegment         *message);
size_t ssl__field_line_segment__get_packed_size
                     (const SSLFieldLineSegment   *message);
size_t ssl__field_line_segment__pack
                     (const SSLFieldLineSegment   *message,
                      uint8_t             *out);
size_t ssl__field_line_segment__pack_to_buffer
                     (const SSLFieldLineSegment   *message,
                      ProtobufCBuffer     *buffer);
SSLFieldLineSegment *
       ssl__field_line_segment__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__field_line_segment__free_unpacked
                     (SSLFieldLineSegment *message,
                      ProtobufCAllocator *allocator);
/* SSLFieldCicularArc methods */
void   ssl__field_cicular_arc__init
                     (SSLFieldCicularArc         *message);
size_t ssl__field_cicular_arc__get_packed_size
                     (const SSLFieldCicularArc   *message);
size_t ssl__field_cicular_arc__pack
                     (const SSLFieldCicularArc   *message,
                      uint8_t             *out);
size_t ssl__field_cicular_arc__pack_to_buffer
                     (const SSLFieldCicularArc   *message,
                      ProtobufCBuffer     *buffer);
SSLFieldCicularArc *
       ssl__field_cicular_arc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__field_cicular_arc__free_unpacked
                     (SSLFieldCicularArc *message,
                      ProtobufCAllocator *allocator);
/* SSLGeometryFieldSize methods */
void   ssl__geometry_field_size__init
                     (SSLGeometryFieldSize         *message);
size_t ssl__geometry_field_size__get_packed_size
                     (const SSLGeometryFieldSize   *message);
size_t ssl__geometry_field_size__pack
                     (const SSLGeometryFieldSize   *message,
                      uint8_t             *out);
size_t ssl__geometry_field_size__pack_to_buffer
                     (const SSLGeometryFieldSize   *message,
                      ProtobufCBuffer     *buffer);
SSLGeometryFieldSize *
       ssl__geometry_field_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__geometry_field_size__free_unpacked
                     (SSLGeometryFieldSize *message,
                      ProtobufCAllocator *allocator);
/* SSLGeometryCameraCalibration methods */
void   ssl__geometry_camera_calibration__init
                     (SSLGeometryCameraCalibration         *message);
size_t ssl__geometry_camera_calibration__get_packed_size
                     (const SSLGeometryCameraCalibration   *message);
size_t ssl__geometry_camera_calibration__pack
                     (const SSLGeometryCameraCalibration   *message,
                      uint8_t             *out);
size_t ssl__geometry_camera_calibration__pack_to_buffer
                     (const SSLGeometryCameraCalibration   *message,
                      ProtobufCBuffer     *buffer);
SSLGeometryCameraCalibration *
       ssl__geometry_camera_calibration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__geometry_camera_calibration__free_unpacked
                     (SSLGeometryCameraCalibration *message,
                      ProtobufCAllocator *allocator);
/* SSLGeometryData methods */
void   ssl__geometry_data__init
                     (SSLGeometryData         *message);
size_t ssl__geometry_data__get_packed_size
                     (const SSLGeometryData   *message);
size_t ssl__geometry_data__pack
                     (const SSLGeometryData   *message,
                      uint8_t             *out);
size_t ssl__geometry_data__pack_to_buffer
                     (const SSLGeometryData   *message,
                      ProtobufCBuffer     *buffer);
SSLGeometryData *
       ssl__geometry_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__geometry_data__free_unpacked
                     (SSLGeometryData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Vector2f_Closure)
                 (const Vector2f *message,
                  void *closure_data);
typedef void (*SSLFieldLineSegment_Closure)
                 (const SSLFieldLineSegment *message,
                  void *closure_data);
typedef void (*SSLFieldCicularArc_Closure)
                 (const SSLFieldCicularArc *message,
                  void *closure_data);
typedef void (*SSLGeometryFieldSize_Closure)
                 (const SSLGeometryFieldSize *message,
                  void *closure_data);
typedef void (*SSLGeometryCameraCalibration_Closure)
                 (const SSLGeometryCameraCalibration *message,
                  void *closure_data);
typedef void (*SSLGeometryData_Closure)
                 (const SSLGeometryData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor vector2f__descriptor;
extern const ProtobufCMessageDescriptor ssl__field_line_segment__descriptor;
extern const ProtobufCMessageDescriptor ssl__field_cicular_arc__descriptor;
extern const ProtobufCMessageDescriptor ssl__geometry_field_size__descriptor;
extern const ProtobufCMessageDescriptor ssl__geometry_camera_calibration__descriptor;
extern const ProtobufCMessageDescriptor ssl__geometry_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_5frobocup_5fssl_5fgeometry_2eproto__INCLUDED */
