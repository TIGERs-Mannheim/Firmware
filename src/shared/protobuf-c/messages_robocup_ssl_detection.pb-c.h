/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages_robocup_ssl_detection.proto */

#ifndef PROTOBUF_C_messages_5frobocup_5fssl_5fdetection_2eproto__INCLUDED
#define PROTOBUF_C_messages_5frobocup_5fssl_5fdetection_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SSLDetectionBall SSLDetectionBall;
typedef struct _SSLDetectionRobot SSLDetectionRobot;
typedef struct _SSLDetectionFrame SSLDetectionFrame;


/* --- enums --- */


/* --- messages --- */

struct  _SSLDetectionBall
{
  ProtobufCMessage base;
  float confidence;
  protobuf_c_boolean has_area;
  uint32_t area;
  float x;
  float y;
  protobuf_c_boolean has_z;
  float z;
  float pixel_x;
  float pixel_y;
};
#define SSL__DETECTION_BALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__detection_ball__descriptor) \
    , 0, 0,0, 0, 0, 0,0, 0, 0 }


struct  _SSLDetectionRobot
{
  ProtobufCMessage base;
  float confidence;
  protobuf_c_boolean has_robot_id;
  uint32_t robot_id;
  float x;
  float y;
  protobuf_c_boolean has_orientation;
  float orientation;
  float pixel_x;
  float pixel_y;
  protobuf_c_boolean has_height;
  float height;
};
#define SSL__DETECTION_ROBOT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__detection_robot__descriptor) \
    , 0, 0,0, 0, 0, 0,0, 0, 0, 0,0 }


struct  _SSLDetectionFrame
{
  ProtobufCMessage base;
  uint32_t frame_number;
  double t_capture;
  double t_sent;
  uint32_t camera_id;
  size_t n_balls;
  SSLDetectionBall **balls;
  size_t n_robots_yellow;
  SSLDetectionRobot **robots_yellow;
  size_t n_robots_blue;
  SSLDetectionRobot **robots_blue;
};
#define SSL__DETECTION_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ssl__detection_frame__descriptor) \
    , 0, 0, 0, 0, 0,NULL, 0,NULL, 0,NULL }


/* SSLDetectionBall methods */
void   ssl__detection_ball__init
                     (SSLDetectionBall         *message);
size_t ssl__detection_ball__get_packed_size
                     (const SSLDetectionBall   *message);
size_t ssl__detection_ball__pack
                     (const SSLDetectionBall   *message,
                      uint8_t             *out);
size_t ssl__detection_ball__pack_to_buffer
                     (const SSLDetectionBall   *message,
                      ProtobufCBuffer     *buffer);
SSLDetectionBall *
       ssl__detection_ball__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__detection_ball__free_unpacked
                     (SSLDetectionBall *message,
                      ProtobufCAllocator *allocator);
/* SSLDetectionRobot methods */
void   ssl__detection_robot__init
                     (SSLDetectionRobot         *message);
size_t ssl__detection_robot__get_packed_size
                     (const SSLDetectionRobot   *message);
size_t ssl__detection_robot__pack
                     (const SSLDetectionRobot   *message,
                      uint8_t             *out);
size_t ssl__detection_robot__pack_to_buffer
                     (const SSLDetectionRobot   *message,
                      ProtobufCBuffer     *buffer);
SSLDetectionRobot *
       ssl__detection_robot__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__detection_robot__free_unpacked
                     (SSLDetectionRobot *message,
                      ProtobufCAllocator *allocator);
/* SSLDetectionFrame methods */
void   ssl__detection_frame__init
                     (SSLDetectionFrame         *message);
size_t ssl__detection_frame__get_packed_size
                     (const SSLDetectionFrame   *message);
size_t ssl__detection_frame__pack
                     (const SSLDetectionFrame   *message,
                      uint8_t             *out);
size_t ssl__detection_frame__pack_to_buffer
                     (const SSLDetectionFrame   *message,
                      ProtobufCBuffer     *buffer);
SSLDetectionFrame *
       ssl__detection_frame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ssl__detection_frame__free_unpacked
                     (SSLDetectionFrame *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SSLDetectionBall_Closure)
                 (const SSLDetectionBall *message,
                  void *closure_data);
typedef void (*SSLDetectionRobot_Closure)
                 (const SSLDetectionRobot *message,
                  void *closure_data);
typedef void (*SSLDetectionFrame_Closure)
                 (const SSLDetectionFrame *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ssl__detection_ball__descriptor;
extern const ProtobufCMessageDescriptor ssl__detection_robot__descriptor;
extern const ProtobufCMessageDescriptor ssl__detection_frame__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_5frobocup_5fssl_5fdetection_2eproto__INCLUDED */
