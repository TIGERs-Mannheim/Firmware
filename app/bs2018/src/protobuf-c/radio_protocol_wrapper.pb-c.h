/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: radio_protocol_wrapper.proto */

#ifndef PROTOBUF_C_radio_5fprotocol_5fwrapper_2eproto__INCLUDED
#define PROTOBUF_C_radio_5fprotocol_5fwrapper_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "radio_protocol_command.pb-c.h"

typedef struct _RadioProtocolWrapper RadioProtocolWrapper;


/* --- enums --- */


/* --- messages --- */

struct  _RadioProtocolWrapper
{
  ProtobufCMessage base;
  size_t n_command;
  RadioProtocolCommand **command;
};
#define RADIO_PROTOCOL_WRAPPER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&radio_protocol_wrapper__descriptor) \
    , 0,NULL }


/* RadioProtocolWrapper methods */
void   radio_protocol_wrapper__init
                     (RadioProtocolWrapper         *message);
size_t radio_protocol_wrapper__get_packed_size
                     (const RadioProtocolWrapper   *message);
size_t radio_protocol_wrapper__pack
                     (const RadioProtocolWrapper   *message,
                      uint8_t             *out);
size_t radio_protocol_wrapper__pack_to_buffer
                     (const RadioProtocolWrapper   *message,
                      ProtobufCBuffer     *buffer);
RadioProtocolWrapper *
       radio_protocol_wrapper__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   radio_protocol_wrapper__free_unpacked
                     (RadioProtocolWrapper *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RadioProtocolWrapper_Closure)
                 (const RadioProtocolWrapper *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor radio_protocol_wrapper__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_radio_5fprotocol_5fwrapper_2eproto__INCLUDED */
